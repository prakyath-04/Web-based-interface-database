-- Generated by Oracle SQL Developer Data Modeler 21.1.0.092.1221
--   at:        2021-08-12 19:00:03 PDT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE pm_cust_insr (
    start_date  DATE NOT NULL,
    end_date    DATE NOT NULL,
    cid         NUMBER(10) NOT NULL,
    ins_no      NUMBER(10) NOT NULL
);

COMMENT ON COLUMN pm_cust_insr.start_date IS
    'THE START DATE OF THE INSURANCE';

COMMENT ON COLUMN pm_cust_insr.end_date IS
    'THE END DATE OF THE INSURANCE';

ALTER TABLE pm_cust_insr ADD CONSTRAINT pm_cust_insr_pk PRIMARY KEY ( cid,
                                                                      ins_no );

CREATE TABLE pm_custmr (
    cid          NUMBER(10) NOT NULL,
    fname        VARCHAR2(30) NOT NULL,
    mname        VARCHAR2(30),
    lname        VARCHAR2(30) NOT NULL,
    street       VARCHAR2(20) NOT NULL,
    h_no         NUMBER(7) NOT NULL,
    apt_no       VARCHAR2(10),
    city         VARCHAR2(20) NOT NULL,
    state        VARCHAR2(20) NOT NULL,
    country      VARCHAR2(20) NOT NULL,
    zip          NUMBER(10) NOT NULL,
    gender       CHAR(1),
    mart_status  CHAR(1) NOT NULL
);

COMMENT ON COLUMN pm_custmr.cid IS
    'THE UNIQUE ID GIVEN TO THE CUSTOMER';

COMMENT ON COLUMN pm_custmr.fname IS
    'THE FIRST NAME OF THE CUSTOMER';

COMMENT ON COLUMN pm_custmr.mname IS
    'THE MIDDLE NAME OF THE CUSTOMER';

COMMENT ON COLUMN pm_custmr.lname IS
    'THE LAST NAME OF THE CUSTOMER';

COMMENT ON COLUMN pm_custmr.street IS
    'THE STREET NUMBER/NAME OF THE HOUSE/APARTMENT OF THE CUSTOMER';

COMMENT ON COLUMN pm_custmr.h_no IS
    'THE HOUSE NUMBER OF THE HOUSE/APARTMENT ON THE STREET, OF THE CUSTOMER';

COMMENT ON COLUMN pm_custmr.apt_no IS
    'THE APARTMENT NUMBER OF THE HOUSE(IF ANY)';

COMMENT ON COLUMN pm_custmr.city IS
    'THE CITY OF THE HOUSE IN WHICH THE CUSTOMER LIVES ';

COMMENT ON COLUMN pm_custmr.state IS
    'THE STATE IN WHICH THE CUSTOMER LIVES. ';

COMMENT ON COLUMN pm_custmr.country IS
    'THE COUNTRY IN WHICH THE CUSTOMER LIVES';

COMMENT ON COLUMN pm_custmr.zip IS
    'THE ZIP CODE OF THE NEIGHBOURHOOD IN WHICH THE CUSTOMER LIVES';

COMMENT ON COLUMN pm_custmr.gender IS
    'THE GENDER OF THE CUSTOMER. A CUSTOMER MAY CHOOSE NOT TO PROVIDE THEIR GENDER TO THE COMPANY. THE POSSIBLEVALUES ARE ''M'', ''F'' OR ''NULL'' IF NOT PROVIDED.';

COMMENT ON COLUMN pm_custmr.mart_status IS
    'THE MARTIAL STATUS OF THE CUSTOMER. IT CAN BE ONE OF THE FOLLOWING: ''M'', ''S'' OR ''W'' REPRESENTING MARRIED, SINGLE OR WIDOW/WIDOWER STATUS';

ALTER TABLE pm_custmr ADD CONSTRAINT pm_custmr_pk PRIMARY KEY ( cid );

CREATE TABLE pm_driver (
    licence    VARCHAR2(10) NOT NULL,
    d_fname    VARCHAR2(20) NOT NULL,
    d_lname    VARCHAR2(20) NOT NULL,
    d_mname    VARCHAR2(20),
    birthdate  DATE NOT NULL,
    vin        NUMBER(7) NOT NULL
);

COMMENT ON COLUMN pm_driver.licence IS
    'THE UNIQUE LICENCE NUMBER OF THE DRIVER.';

COMMENT ON COLUMN pm_driver.d_fname IS
    'THE FIRST NAME OF THE DRIVER';

COMMENT ON COLUMN pm_driver.d_lname IS
    'THE LAST NAME OF THE DRIVER';

COMMENT ON COLUMN pm_driver.d_mname IS
    'THE MIDDLE NAME OF THE DRIVER';

COMMENT ON COLUMN pm_driver.birthdate IS
    'THE BIRTH DATE OF THE DRIVER';

ALTER TABLE pm_driver ADD CONSTRAINT pm_driver_pk PRIMARY KEY ( licence );

CREATE TABLE pm_home (
    house_id       NUMBER(7) NOT NULL,
    pur_date       DATE NOT NULL,
    pur_value      NUMBER(10, 3) NOT NULL,
    area           NUMBER(7, 3) NOT NULL,
    htype          CHAR(1) NOT NULL,
    auto_fire_n    CHAR(1) NOT NULL,
    home_security  CHAR(1) NOT NULL,
    basement       CHAR(1) NOT NULL,
    swim_pool      CHAR(1),
    ins_no         NUMBER(10) NOT NULL
);

COMMENT ON COLUMN pm_home.house_id IS
    'THE UNIQUE IDENTIFICATION NUMBER GIVEN TO THE HOUSE';

COMMENT ON COLUMN pm_home.pur_date IS
    'THE PURCHASE DATE OF THE HOUSE';

COMMENT ON COLUMN pm_home.pur_value IS
    'THE PURCHASE VALUE OF THE HOUSE';

COMMENT ON COLUMN pm_home.area IS
    'THE AREA OF THE HOUSE IN SQUARE FEET.';

COMMENT ON COLUMN pm_home.htype IS
    'THE TYPE OF HOUSE. THE POSSIBLE VALUES OF THE HOUSE ARE ''S'', ''M'', ''C'', ''T'' REPRESENTING SINGLE FAMILY, MULTI FAMILY, CONDOMONIUM AND TOWN HOUSE RESPECTIVELY.';

COMMENT ON COLUMN pm_home.auto_fire_n IS
    'THE INDICATOR TELLING THE COMPANY WHETHER THE HOUSE HAS AN AUTOMATIC FIRE NOTICATION SYSTEM. THE POSSIBLE VALUES ARE ''1'' OR ''0'' TELLING THAT THE SYSTEM IS PRESENT OR NOT.';

COMMENT ON COLUMN pm_home.home_security IS
    'THE INDICATOR TELLING THE COMPANY WHETHER THE HOUSE HAS A HOME SECURITY SYSTEM. THE POSSIBLE VALUES ARE ''1'' OR ''0'' TELLING THAT THE SYSTEM IS PRESENT OR NOT.';

COMMENT ON COLUMN pm_home.basement IS
    'THE INDICATOR TELLING THE COMPANY WHETHER THE HOUSE HAS A BASEMENT. THE POSSIBLE VALUES ARE ''1'' OR ''0'' TELLING THAT THE BASEMENT IS PRESENT OR NOT.';

COMMENT ON COLUMN pm_home.swim_pool IS
    'THE INDICATOR TELLING THE COMPANY WHETHER THE HOUSE HAS A SWIMMING POOL OR NOT. THE POSSIBLE VALUE ARE ''U'', ''O'', ''I'', ''M'' REPRESNTING UNDERGROUND, OVERGROUND, INDOOR AND MULTIPLE SWIMMING POOL RESPECTIVELY. IF THE FIELD IS ''NULL'', THEN THE HOUSE DOESN''T HAVE A SWIMMING POOL';

ALTER TABLE pm_home ADD CONSTRAINT pm_home_pk PRIMARY KEY ( house_id );

CREATE TABLE pm_in_auto (
    ins_no NUMBER(10) NOT NULL
);

COMMENT ON COLUMN pm_in_auto.ins_no IS
    'THE UNIQUE INSURANCE NUMBER GIVEN TO THE CUSTOMER. A DIFFERENT INSURANCE NUMBER IS GIVEN FOR EACH INSURANCE TYPE THEY HOLD.';

ALTER TABLE pm_in_auto ADD CONSTRAINT pm_in_auto_pk PRIMARY KEY ( ins_no );

CREATE TABLE pm_in_home (
    ins_no NUMBER(10) NOT NULL
);

COMMENT ON COLUMN pm_in_home.ins_no IS
    'THE UNIQUE INSURANCE NUMBER GIVEN TO THE CUSTOMER. A DIFFERENT INSURANCE NUMBER IS GIVEN FOR EACH INSURANCE TYPE THEY HOLD.';

ALTER TABLE pm_in_home ADD CONSTRAINT pm_in_home_pk PRIMARY KEY ( ins_no );

CREATE TABLE pm_insrnce (
    ins_no    NUMBER(10) NOT NULL,
    ins_type  CHAR(1) NOT NULL,
    status    CHAR(1) NOT NULL,
    prem_amt  NUMBER(10, 3) NOT NULL
);

ALTER TABLE pm_insrnce
    ADD CONSTRAINT ch_inh_pm_insrnce CHECK ( ins_type IN ( 'A', 'H' ) );

COMMENT ON COLUMN pm_insrnce.ins_no IS
    'THE UNIQUE INSURANCE NUMBER GIVEN TO THE CUSTOMER. A DIFFERENT INSURANCE NUMBER IS GIVEN FOR EACH INSURANCE TYPE THEY HOLD.';

COMMENT ON COLUMN pm_insrnce.ins_type IS
    'THE TYPE OF INSURANCE THE CUSTOMER HOLDS. A CUSTOMER CAN HAVE MORE THAN ONE TYPE OF INSURANCE. THE POSSIBLE VALUES OF THE TYPE ARE: ''A'' OR ''H'' REPRESENTING AUTOMOBILE AND HOME INSURANCE RESPECTIVELY.';

COMMENT ON COLUMN pm_insrnce.status IS
    'THE STATUS OF THE INSURANCE. TWO POSSIBLE VALUES FOR THE STATUS: ''C'' AND ''P'' FOR CURRENT AND EXPIRED INSURANCES.';

COMMENT ON COLUMN pm_insrnce.prem_amt IS
    'THE PREMIM AMOUNT OF THE INSURANCE';

ALTER TABLE pm_insrnce ADD CONSTRAINT pm_insrnce_pk PRIMARY KEY ( ins_no );

CREATE TABLE pm_invoice (
    inv_id    NUMBER(5) NOT NULL,
    inv_date  DATE NOT NULL,
    due_date  DATE NOT NULL,
    i_amt     NUMBER(7, 2) NOT NULL,
    ins_no    NUMBER(10) NOT NULL
);

COMMENT ON COLUMN pm_invoice.inv_id IS
    'THE UNIQUE ID GIVEN TO THE INVOICE.';

COMMENT ON COLUMN pm_invoice.inv_date IS
    'THE DATE ON WHICH THE INVOICE WAS GENERATED';

COMMENT ON COLUMN pm_invoice.due_date IS
    'THE DUE DATE OF THE INVOICE PAYMENT.';

COMMENT ON COLUMN pm_invoice.i_amt IS
    'THE PAYABLE INVOICE AMOUNT';

ALTER TABLE pm_invoice ADD CONSTRAINT pm_invoice_pk PRIMARY KEY ( inv_id );

CREATE TABLE pm_paymnt (
    pay_id    NUMBER(5) NOT NULL,
    pay_date  DATE NOT NULL,
    method    CHAR(2) NOT NULL,
    p_amt     NUMBER(7, 2) NOT NULL,
    inv_id    NUMBER(5) NOT NULL
);

COMMENT ON COLUMN pm_paymnt.pay_id IS
    'THE UNIQUE ID GIVEN TO THE PAYMENT MADE BY THE CUSTOMER';

COMMENT ON COLUMN pm_paymnt.pay_date IS
    'THE DATE OF WHICH THE PAYMENT OR INSTALLMENT WAS MADE.';

COMMENT ON COLUMN pm_paymnt.method IS
    'THE PAYMENT METHOD THROUGH WHICH THE PAYMENT WAS MADE. THERE ARE 4 POSSIBLE VALUES ''PP'', ''CC'', ''DC'', ''CK'' REPRESENTING PAYPAL, CREDIT CARD, DEBIT CARD AND CHECK PAYMENTS RESPECTIVELY ';

COMMENT ON COLUMN pm_paymnt.p_amt IS
    'THE AMOUNT PAID BY THE CUSTOMER';

ALTER TABLE pm_paymnt ADD CONSTRAINT pm_paymnt_pk PRIMARY KEY ( pay_id );

CREATE TABLE pm_vehcle (
    vin       NUMBER(7) NOT NULL,
    vmake     VARCHAR2(20) NOT NULL,
    vmodel    VARCHAR2(10) NOT NULL,
    model_yr  NUMBER(4) NOT NULL,
    status    CHAR(1) NOT NULL,
    ins_no    NUMBER(10) NOT NULL
);

COMMENT ON COLUMN pm_vehcle.vin IS
    'THE UNIQUE VEHICLE IDENTIFICATION NUMBER';

COMMENT ON COLUMN pm_vehcle.vmake IS
    'THE MANUFACTURING COMPANY OF THE VEHICLE';

COMMENT ON COLUMN pm_vehcle.vmodel IS
    'THE MODEL OF THE VEHICLE';

COMMENT ON COLUMN pm_vehcle.model_yr IS
    'THE YEAR OF THE MODEL';

COMMENT ON COLUMN pm_vehcle.status IS
    'THE STSTUS OF THE VEHICLE BEING INSURED. THE POSSIBLE VALUES ARE ''L'', ''F'', ''O'' REPRESENTING LEASED, FINANCED AND OWNED VEHICLES RESPECTIVELY';

ALTER TABLE pm_vehcle ADD CONSTRAINT pm_vehcle_pk PRIMARY KEY ( vin );

ALTER TABLE pm_cust_insr
    ADD CONSTRAINT pm_cust_insr_fk1 FOREIGN KEY ( cid )
        REFERENCES pm_custmr ( cid );

ALTER TABLE pm_cust_insr
    ADD CONSTRAINT pm_cust_insr_fk2 FOREIGN KEY ( ins_no )
        REFERENCES pm_insrnce ( ins_no );

ALTER TABLE pm_driver
    ADD CONSTRAINT pm_driver_pm_vehcle_fk FOREIGN KEY ( vin )
        REFERENCES pm_vehcle ( vin );

ALTER TABLE pm_home
    ADD CONSTRAINT pm_home_in_home_fk FOREIGN KEY ( ins_no )
        REFERENCES pm_in_home ( ins_no );

ALTER TABLE pm_in_auto
    ADD CONSTRAINT pm_in_auto_ins_fk FOREIGN KEY ( ins_no )
        REFERENCES pm_insrnce ( ins_no );

ALTER TABLE pm_in_home
    ADD CONSTRAINT pm_in_home_ins_fk FOREIGN KEY ( ins_no )
        REFERENCES pm_insrnce ( ins_no );

ALTER TABLE pm_invoice
    ADD CONSTRAINT pm_inv_ins_fk FOREIGN KEY ( ins_no )
        REFERENCES pm_insrnce ( ins_no );

ALTER TABLE pm_paymnt
    ADD CONSTRAINT pm_pay_inv_fk FOREIGN KEY ( inv_id )
        REFERENCES pm_invoice ( inv_id );

ALTER TABLE pm_vehcle
    ADD CONSTRAINT pm_veh_in_auto_fk FOREIGN KEY ( ins_no )
        REFERENCES pm_in_auto ( ins_no );

CREATE OR REPLACE TRIGGER arc_fkarc_2_pm_in_auto BEFORE
    INSERT OR UPDATE OF ins_no ON pm_in_auto
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.ins_type
    INTO d
    FROM
        pm_insrnce a
    WHERE
        a.ins_no = :new.ins_no;

    IF ( d IS NULL OR d <> 'A' ) THEN
        raise_application_error(-20223,
                               'FK PM_IN_AUTO_INS_FK in Table PM_IN_AUTO violates Arc constraint on Table PM_INSRNCE - discriminator column INS_TYPE doesn''t have value ''A''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_pm_in_home BEFORE
    INSERT OR UPDATE OF ins_no ON pm_in_home
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.ins_type
    INTO d
    FROM
        pm_insrnce a
    WHERE
        a.ins_no = :new.ins_no;

    IF ( d IS NULL OR d <> 'H' ) THEN
        raise_application_error(-20223,
                               'FK PM_IN_HOME_INS_FK in Table PM_IN_HOME violates Arc constraint on Table PM_INSRNCE - discriminator column INS_TYPE doesn''t have value ''H''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/




alter table PM_CUSTMR add constraint C_CUST_GENDER check (GENDER IN ( 'M', 'F' ));

alter table PM_CUSTMR add constraint C_CUST_MART_STATUS check (MART_STATUS IN ( 'S', 'M', 'W' ));

alter table PM_INSRNCE add constraint C_INS_TYPE check (INS_TYPE IN ( 'A', 'H' ));

alter table PM_INSRNCE add constraint C_INS_STATUS check (STATUS IN ( 'P', 'C' ));

alter table PM_HOME add constraint C_HOME_TYPE check (HTYPE IN ( 'S', 'M', 'C', 'T' ));

alter table PM_HOME add constraint C_AUTO_FIRE check (AUTO_FIRE_N IN ('0','1'));

alter table PM_HOME add constraint C_HOME_SEC check (HOME_SECURITY IN ('0','1'));

alter table PM_HOME add constraint C_BASEMENT check (BASEMENT IN ('0','1'));

alter table PM_HOME add constraint C_SWIM_POOL check (SWIM_POOL IN ('U','O','I','M'));

alter table PM_VEHCLE add constraint C_VEH_STATUS check (STATUS IN ('L','F','O'));

alter table PM_PAYMNT add constraint C_METHOD check (METHOD IN ('PP','CC','DC','CK'));
